
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: roles.postgresql.sql.crossplane.io
spec:
  group: postgresql.sql.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - sql
    kind: Role
    listKind: RoleList
    plural: roles
    singular: role
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.connectionLimit
      name: CONN LIMIT
      type: integer
    - jsonPath: .status.atProvider.privilegesAsClauses
      name: PRIVILEGES
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Role represents the declarative state of a PostgreSQL role.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A RoleSpec defines the desired state of a Role.
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RoleParameters define the desired state of a PostgreSQL role instance.
                properties:
                  configurationParameters:
                    description: ConfigurationParameters represents configuration parameters for this role
                    items:
                      description: RoleConfigurationParameter represents a role configuration parameter
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  connectionLimit:
                    description: ConnectionLimit to be applied to the role.
                    format: int32
                    type: integer
                  passwordSecretRef:
                    description: PasswordSecretRef references the secret that contains the password used for this role. If no reference is given, a password will be auto-generated.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  privileges:
                    description: Privileges to be granted.
                    properties:
                      bypassRls:
                        description: BypassRls grants BYPASSRLS when true, allowing the role to bypass row-level security policies.
                        type: boolean
                      createDb:
                        description: CreateDb grants CREATEDB when true, allowing the role to create databases.
                        type: boolean
                      createRole:
                        description: CreateRole grants CREATEROLE when true, allowing this role to create other roles.
                        type: boolean
                      inherit:
                        description: Inherit grants INHERIT when true, allowing the role to inherit permissions from other roles it is a member of.
                        type: boolean
                      login:
                        description: Login grants LOGIN when true, allowing the role to login to the server.
                        type: boolean
                      replication:
                        description: Replication grants REPLICATION when true, allowing the role to connect in replication mode.
                        type: boolean
                      superUser:
                        description: SuperUser grants SUPERUSER privilege when true.
                        type: boolean
                    type: object
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A RoleStatus represents the observed state of a Role.
            properties:
              atProvider:
                description: A RoleObservation represents the observed state of a PostgreSQL role.
                properties:
                  configurationParameters:
                    description: ConfigurationParameters represents the applied configuration parameters for the PostgreSQL role.
                    items:
                      description: RoleConfigurationParameter represents a role configuration parameter
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  privilegesAsClauses:
                    description: PrivilegesAsClauses represents the applied privileges state, taking into account any defaults applied by Postgres, and expressed as a list of ROLE PRIVILEGE clauses.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
